[include]
	path = ~/.gitconfig.local
[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	grep = auto
[core]
	editor = vim
	pager = "less -R"
	excludesfile = ~/.global_ignore
	quotepath = false
	preloadindex = true
	fscache = true
	hooksPath = githooks
[push]
	default = current
[pull]
	rebase = true
[grep]
	lineNumber = true
[alias]
	alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
	b = branch -a
	br = browse-remote
	cancel = !git commit -a -m 'Temporary commit for cancel' && git reset --hard HEAD~
	ci = commit
	cloc = !cloc $(git ls-files)
	co = checkout
	d = diff
	dc = diff --cached
	delete-merged-branches = !git branch --merged | grep -v \\* | xargs -I % git branch -d %
	del-squashed-branch = "!f(){ base_branch=${1:-master} && echo ${base_branch} && git checkout -q ${base_branch} && git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do mergeBase=$(git merge-base origin/${base_branch} $branch) && [[ $(git cherry origin/${base_branch} $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done; git checkout -q -;};f"
	del-sq = !git del-squashed-branch `git def-branch`
	def-branch = !git ls-remote --symref origin HEAD | head -n 1 | cut -f 1 | cut -d "/" -f 3-
	df = diff
	diffr = diff --color-words --word-diff-regex='\\w+|[^[:space:]]'
	dn = diff --name-only
	dw = diff -w
	dwd = diff --word-diff
	f = fetch --prune
	fetch-pulls = fetch origin +refs/pull/*:refs/remotes/pull/*
	fs = !git f && git su
	grepall = !git grep
	ignore = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >> .gitignore
	info = remote show origin
	l = log --graph -n 20 --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset'
	ll = log --stat --abbrev-commit
	ln = log --graph -n 20 --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset' --name-status
	log-fancy = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset' --abbrev-commit --date=relative
	log-nice  = log --graph --decorate --pretty=oneline --abbrev-commit
	lp = log --oneline -n 20 -p
	ls = log --stat --abbrev-commit -n 1 # display previous log
	panic     = !tar cvf ../git_panic.tar *
	s = status --short --branch
	st = status
	su = submodule update
	sync = !git checkout master && git pull origin master && git fetch -p origin && git branch -d $(git branch --merged | grep -v master | grep -v '*')
	openpr = "!f() { hub browse -- `git log --merges --oneline --reverse --ancestry-path $1...master | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%pull/%'`; }; f"
[merge]
	tool = vimdiff
	ff = false
	log = true
[branch]
	autosetuprebase = always
[rebase]
	autostash = true
[help]
	autocorrect = 1
[secrets]
	providers = git secrets --aws-provider
	patterns = (A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}
	patterns = (\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\"|')?\\s*(:|=>|=)\\s*(\"|')?[A-Za-z0-9/\\+=]{40}(\"|')?
	patterns = (\"|')?(AWS|aws|Aws)?_?(ACCOUNT|account|Account)_?(ID|id|Id)?(\"|')?\\s*(:|=>|=)\\s*(\"|')?[0-9]{4}\\-?[0-9]{4}\\-?[0-9]{4}(\"|')?
	allowed = AKIAIOSFODNN7EXAMPLE
	allowed = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
	patterns = private_key
	patterns = private_key_id
[init]
	templatedir = ~/dotfiles/git-templates/secrets
[ghq]
	root = ~/Repos
[pager]
    log = diff-highlight | less
    show = diff-highlight | less
    diff = diff-highlight | less